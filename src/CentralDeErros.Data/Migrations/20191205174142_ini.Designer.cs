// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using CentralDeErros.Data.Context;

namespace CentralDeErros.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20191205174142_ini")]
    partial class ini
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("squad_2_csharp.domain.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnName("detail")
                        .HasColumnType("varchar(max)")
                        .HasMaxLength(255);

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnName("environment")
                        .HasColumnType("char(1)")
                        .HasMaxLength(255);

                    b.Property<int>("Event")
                        .HasColumnName("event")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasColumnName("ip")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(255);

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnName("level")
                        .HasColumnType("char(1)")
                        .HasMaxLength(255);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(255);

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Token");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("squad_2_csharp.domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(255);

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(255)
                        .HasDefaultValue("USUARIO");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8fd56826-43cb-4604-aecc-298d8c4e551f"),
                            Active = false,
                            Email = "admin@mail.com",
                            Name = "Administrador",
                            Password = "e10adc3949ba59abbe56e057f20f883e",
                            Role = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("84205119-a904-44f2-8b1e-3c49a1adf4b5"),
                            Active = false,
                            Email = "usuario@mail.com",
                            Name = "Usuário Teste",
                            Password = "e10adc3949ba59abbe56e057f20f883e",
                            Role = "USUARIO"
                        });
                });

            modelBuilder.Entity("squad_2_csharp.domain.Models.Log", b =>
                {
                    b.HasOne("squad_2_csharp.domain.Models.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("Token")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
